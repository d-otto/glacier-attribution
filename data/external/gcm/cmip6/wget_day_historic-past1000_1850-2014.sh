#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.llnl.gov - 2022/11/18 12:07:56
# Search URL: https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC-ES2L.historical.r1i1000p1f2.day.tas.gn.v20210118|esgf-data02.diasjp.net&dataset_id=CMIP6.CMIP.MRI.MRI-ESM2-0.historical.r1i1000p1f1.day.tas.gn.v20201029|esgf-data03.diasjp.net
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=CMIP6.CMIP.MIROC.MIROC-ES2L.historical.r1i1000p1f2.day.tas.gn.v20210118|esgf-data02.diasjp.net&dataset_id=CMIP6.CMIP.MRI.MRI-ESM2-0.historical.r1i1000p1f1.day.tas.gn.v20201029|esgf-data03.diasjp.net'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18500101-18501231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18500101-18501231.nc' 'SHA256' '76169806be2c427ef89dafa72f1ca91dc6d7a0c91cad0b8984ad5c3f657c1c3f'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18510101-18511231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18510101-18511231.nc' 'SHA256' 'f323f50255d6a8870a0736129af3bb1cf1b35e940e12a1febba100f8b66f870c'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18520101-18521231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18520101-18521231.nc' 'SHA256' 'abeeb7fa55cb5c6841d17909be2373b447a0819dbefb270fcc6b2877c9e4e8de'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18530101-18531231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18530101-18531231.nc' 'SHA256' '15cfb5e9fe00b4815b5b97aa2443d28e88ed311d946dcdc8016972f30ffe8411'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18540101-18541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18540101-18541231.nc' 'SHA256' 'b33fc7db1039115dc8b547b445acd38be471bc37dd699077d226cb751b7ca762'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18550101-18551231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18550101-18551231.nc' 'SHA256' '40ea9edeec16fdb9f4179617890465d7a8a2bff635fbd96ac5464adda6ad434b'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18560101-18561231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18560101-18561231.nc' 'SHA256' '31f55e408bf0213a2594d561950ebc6cf5f1344ab66426bed08b0b1c21f1b862'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18570101-18571231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18570101-18571231.nc' 'SHA256' '2ed2d28eaa48dae40b1664369107cdd575cee3690233257770a2fcba4de652fc'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18580101-18581231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18580101-18581231.nc' 'SHA256' 'e62486c09393529a3471a7520ec9d87e0313f560517e03f31aebcb3ed96ac84c'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18590101-18591231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18590101-18591231.nc' 'SHA256' '59bd2ef8b50e83367fc36dd49c55d4bb699c5fb201e2b55bf4c55132ad941bd7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18600101-18601231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18600101-18601231.nc' 'SHA256' 'a8f324992c4954ccd2742a822b8fc2162431acdfb6a46665d472a3b7ba8bdb00'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18610101-18611231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18610101-18611231.nc' 'SHA256' '5fe787da126a5653cdf9e4665f4d74c0de04cca5f5fd36d6783cdcbacba1c241'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18620101-18621231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18620101-18621231.nc' 'SHA256' '7b2147cb0a69cd3184a22c60512f4f21187544d35778814a84ee873e4087eea7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18630101-18631231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18630101-18631231.nc' 'SHA256' 'd38a6f995348f7983c6ce0e137e32cc867cde8e3d2043368e7264b474d9c109b'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18640101-18641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18640101-18641231.nc' 'SHA256' 'dca835c583f6f745503cfdb0ae1d1e6c6cfaec8b0465a9e0a39594b15cfc71ea'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18650101-18651231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18650101-18651231.nc' 'SHA256' '55300112f3bf6ee38bafdd0562e1819640dc81dc76cf92402743df483d627a80'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18660101-18661231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18660101-18661231.nc' 'SHA256' '92fb02bed7374fa520262c4d92bb910d8a83085a6c4bbb53e2df708f69286240'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18670101-18671231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18670101-18671231.nc' 'SHA256' '160c7e46d0d2489bad2b4c6e20473a589625826a2bb678bd9e8ff904574436bb'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18680101-18681231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18680101-18681231.nc' 'SHA256' '6d23a1d001d99b6bf9e1ca9a3c2fd6cc5858b072fa4f864c2ca95d44c7d36538'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18690101-18691231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18690101-18691231.nc' 'SHA256' 'bec503ce82c3b642f081003df338fdbb3d283c784848dde1bd27d77570b6dda4'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18700101-18701231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18700101-18701231.nc' 'SHA256' 'e4aee049ea57216435854285ca1d787df14dfb9b99269e84e64a88c9961717d0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18710101-18711231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18710101-18711231.nc' 'SHA256' '3cc46bc130a60fd9292928692997dedcba267935638f53028a403d0fab006510'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18720101-18721231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18720101-18721231.nc' 'SHA256' 'fe5af43572a9c40415ff02bb686d4e37f3dd7e1ee254f2ccf45f06595302de6a'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18730101-18731231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18730101-18731231.nc' 'SHA256' '9a0b8e3166aadf9c5b61045fb1d2bb143df129baddcc77117893516eba63db21'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18740101-18741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18740101-18741231.nc' 'SHA256' '7cfaa95b2b0a2d2d9074fcbc158a708bb200548477698613d0ba72078d9fdec9'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18750101-18751231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18750101-18751231.nc' 'SHA256' '7fc9de5b3d84b7e1c21111325ed93993c92e6743a9a17c79da2e9f381e4183fe'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18760101-18761231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18760101-18761231.nc' 'SHA256' 'fc16c4ab872992337928261251808e626bce9404ecb059118b08cd7fbbeb5e10'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18770101-18771231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18770101-18771231.nc' 'SHA256' 'ef219c81ca56ba596cd0e3c21797a6266b361b46aae2e0ba17a9b42c4a68d2a2'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18780101-18781231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18780101-18781231.nc' 'SHA256' 'badf3af54b0afa2030020a157fafd54a2c95a1f2249e61872c720f70af6d5817'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18790101-18791231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18790101-18791231.nc' 'SHA256' 'c1d2974e52ec5cd59b3cd474de20436454d65875267bca8d71a961d5fbb0eabf'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18800101-18801231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18800101-18801231.nc' 'SHA256' '8853174a0b93d657e8661bc2790a35c8ee3e6489b9a534a541a1575ed90fbcd7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18810101-18811231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18810101-18811231.nc' 'SHA256' '7759d40d9c459cd29933542119c0e03a723cfd72c2f9d72c38ac96e4f3679599'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18820101-18821231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18820101-18821231.nc' 'SHA256' 'd2b24dd71e6e6f5b7c4982b050e87d86d02200ef7d68ca8084b5caa3e0ab17ce'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18830101-18831231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18830101-18831231.nc' 'SHA256' '76b498b9546d690518cd0f51428a3b05f8e474ccf0052570722b15dc3cdb05d6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18840101-18841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18840101-18841231.nc' 'SHA256' '1a9f73a0d00837d7962a33fd76a0ca057305551ab15a316409bb3a4bb31bba60'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18850101-18851231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18850101-18851231.nc' 'SHA256' 'e0d6475a4015130f3b1a4267812d6c46a3776cb01fe4bf524ace5150e3143f51'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18860101-18861231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18860101-18861231.nc' 'SHA256' 'd80e0af7191f691312a4aaa764b9ef835846d5be421925297355b5ad3684146e'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18870101-18871231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18870101-18871231.nc' 'SHA256' 'c8fedb20f6c772d72a92c6169c089ea1e51727d3b6002f85de4e172aa145ecac'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18880101-18881231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18880101-18881231.nc' 'SHA256' '79eca65702bb5d5aedef78c55be103d1947f33ae2a88bd682f085bc90d06b7f3'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18890101-18891231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18890101-18891231.nc' 'SHA256' '2784b913dbbd5bf5dfda245d33af8bc6978c9db84071f12ae27755932ccc93bf'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18900101-18901231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18900101-18901231.nc' 'SHA256' 'b37422a46b8424628829bebcd0bec676d3e493098109c836fbcf37283dfdb351'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18910101-18911231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18910101-18911231.nc' 'SHA256' '4a52707326bc746f977a5d5ccda366e99c12ff0dca5e42f7c0f7f46ae9321da2'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18920101-18921231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18920101-18921231.nc' 'SHA256' 'f26c265ba11da58d0642373ea43af5c94ee6352ea63ca7534c3449ac9b599fda'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18930101-18931231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18930101-18931231.nc' 'SHA256' '85f2ad232c346705dce34384aa07ebe8f55f6c15d561c158b184be826256337a'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18940101-18941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18940101-18941231.nc' 'SHA256' 'c2d7a8696c3b9ed2d141d00ae0ac0cdb711493d6d2f02ca574971da9f8bfed41'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18950101-18951231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18950101-18951231.nc' 'SHA256' 'e188892c9423060f9ce2430130c057390940f4db61b8760043b88a19d56913d0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18960101-18961231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18960101-18961231.nc' 'SHA256' '9ee32f2c790dcab803ee360cc2b69c5ff4ad062e278c3cfe534b72bb0ae93c89'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18970101-18971231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18970101-18971231.nc' 'SHA256' 'aa880916b92bf8a2d39c69762a43d438e6ac7b957d883001eb3652bb5be46527'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18980101-18981231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18980101-18981231.nc' 'SHA256' '6064f73e72218023a9c920cbe1dd73b1d30f6e7a3432ce55f70932fb4dfc5e60'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18990101-18991231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_18990101-18991231.nc' 'SHA256' '893b73d9aaf68128869d8a60e7aa0b29baf737df271432174301e8c64111f8c7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19000101-19001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19000101-19001231.nc' 'SHA256' '323ac7dde0f01ad0918fd135f05bc0c21f7a6b57fd32420449d9e7a1e0f890c5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19010101-19011231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19010101-19011231.nc' 'SHA256' '0338ea211d6cbd79e7e55b1c3eb63ee6df3c9fba95933721737ce3d8efc4b1ec'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19020101-19021231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19020101-19021231.nc' 'SHA256' '25cc60422bbb6b3f1d1f6279034f9e57491983fcdb313e45be2f4e71ce08e495'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19030101-19031231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19030101-19031231.nc' 'SHA256' 'c942a56f7afa7b3b987943de8e7be87231caec4195d48140d5d11d62196f7db5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19040101-19041231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19040101-19041231.nc' 'SHA256' 'df91d321d17dc63c52d0b5bff3658278b88f6d77ed3be596a9fb35ffb76106ea'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19050101-19051231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19050101-19051231.nc' 'SHA256' 'd7413e779dae8c4018583b57fc839039d56f9e51debbcbf062bd5182ca9ac510'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19060101-19061231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19060101-19061231.nc' 'SHA256' '60636ac76c025129989ff4d0ceaa711dbb6cb7306b5adf0c85ef609582a59476'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19070101-19071231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19070101-19071231.nc' 'SHA256' 'aad0c122c6884f0be6b2afbe166109d2d271910cb720baf9c631f1c9554d6120'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19080101-19081231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19080101-19081231.nc' 'SHA256' '3dbdb63237bcde63ad81964bb9fd46c13885444323fdc3c938b98a3a1d40a7ae'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19090101-19091231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19090101-19091231.nc' 'SHA256' '0e7f70e30ca79b6a7431ed3ec78e33b1857cc1c8d5a4afc41f74381ca5cc3c7c'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19100101-19101231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19100101-19101231.nc' 'SHA256' '7888ddc08ce7cf5bc7cb2925c600dc452fff599ab0bcfb39e6da332d272e630a'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19110101-19111231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19110101-19111231.nc' 'SHA256' '72d6ff251fd3437120666b65036f839cd42b844786e6bbe5d9a9e2167790aa69'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19120101-19121231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19120101-19121231.nc' 'SHA256' 'a0d99e2735fe6886c38dd8fbf2146da5fe1c8aa2516503e270cd30e2d69120f3'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19130101-19131231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19130101-19131231.nc' 'SHA256' '2fc5e0a9b00d010f1d623ea4b09e7acf91b92e938e5c65e85911decdfaaa3986'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19140101-19141231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19140101-19141231.nc' 'SHA256' '96171202681831b4b373e6388e1d190f62ab3ce66bff28ebe9d735dad737c4a0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19150101-19151231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19150101-19151231.nc' 'SHA256' 'dd78f27a036a9f6bfad98dc159786c241c0764321a51b60a2b61f8101ebd8d06'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19160101-19161231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19160101-19161231.nc' 'SHA256' 'db7948a247affe64b62fd362c411a287375e5a5b946440e38e54fba7e526f6c9'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19170101-19171231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19170101-19171231.nc' 'SHA256' 'f1d88afef6a864f1e411c0b44ec54deef187f94c35e5447b274f84c3d60a03a0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19180101-19181231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19180101-19181231.nc' 'SHA256' '584bd2a91a172051dc863d3c37af6898a705dd07c5bb31e814e8c2f5bf486ce7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19190101-19191231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19190101-19191231.nc' 'SHA256' '321c9f317ad801812c731b241f61b31da914f8797c9452df463c7bac4dbefc70'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19200101-19201231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19200101-19201231.nc' 'SHA256' 'ef263cdd3864cb3a93e0d2916920d8194da46bf9f5c1bc09897f8fd2427c1dfd'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19210101-19211231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19210101-19211231.nc' 'SHA256' 'efb2c0484cd431686d20be8f50bf7ff5e6ed7076aafee234a19d41dbaa0ff842'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19220101-19221231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19220101-19221231.nc' 'SHA256' 'b030d1b7ef2cafc43d28ba8fd6ec47fad8e3170e3af0a470a98ea71e8522cbb1'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19230101-19231231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19230101-19231231.nc' 'SHA256' '1363434dd3f05a66b5869b5261f5ad125fb40b98d8729d3bcd4e8f1665a834bd'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19240101-19241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19240101-19241231.nc' 'SHA256' 'e8c90ee4cfacf3144e33a8f38aa4a5c60de69d8bd0f2cbb3681800810fc3aac0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19250101-19251231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19250101-19251231.nc' 'SHA256' '752ca1590b5a881ca1e97340e77fb778c9e6939e0a88eb2ce6870b713a8d3f6d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19260101-19261231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19260101-19261231.nc' 'SHA256' '3ae99e21d0b7d2f2185e9d45974c4a9a9e87df4a039063fdcc7e599143a29465'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19270101-19271231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19270101-19271231.nc' 'SHA256' '35e002ad7b65822dba97665cc1db4c6531a4b824c72c43c6a8a37eddc349a6e0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19280101-19281231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19280101-19281231.nc' 'SHA256' '0467418bae7bd5075614b467f9ddc5b951cecaea8cb7f95f793c7279b245454c'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19290101-19291231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19290101-19291231.nc' 'SHA256' 'a0a0e8a96bfe7735a4c8873656743b98e512916d534771adeca555758013c6d6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19300101-19301231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19300101-19301231.nc' 'SHA256' '38ca5ee59bc867b5a394d8bb46ca8de1ce4343599ec2ccdcdf298d7e483c38b3'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19310101-19311231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19310101-19311231.nc' 'SHA256' '3e53f8757437bbcb71c39bcc127bedb9d2a624b3c4b6e2ca5af609d3f431946e'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19320101-19321231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19320101-19321231.nc' 'SHA256' 'e38024d9a6ecb44bc6e33d0cfc798cb0c5ffeb57e532c2f43364628ec97897ff'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19330101-19331231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19330101-19331231.nc' 'SHA256' 'd9b97fff2d359f0aa0b343f8c6ac0b10681866b4c28ab59117bab725388e88c9'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19340101-19341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19340101-19341231.nc' 'SHA256' '7d7a796505840d589a7a0ade7f19864357972eefbcf345995bb70b0e17371926'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19350101-19351231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19350101-19351231.nc' 'SHA256' '56e785975acdf6dafbbd2f6529912179960419856f877de45ac386f4bf5f4ea5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19360101-19361231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19360101-19361231.nc' 'SHA256' '02a6f055e21073220ae5aaef8f8946d343d022bc61967c7fffcf5420eb8a3611'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19370101-19371231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19370101-19371231.nc' 'SHA256' '7cf58d5a0950952e3fcfb5fb523946bc9a23b39012b2f924eddd6318837973d0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19380101-19381231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19380101-19381231.nc' 'SHA256' '557455a8da773e9194287a752461ed50cd5559a748b93b80340fd0782798fb20'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19390101-19391231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19390101-19391231.nc' 'SHA256' '0be706c30d452ab59cba4452cd1ea8b5d91da60748443738a14a6894c059fba7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19400101-19401231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19400101-19401231.nc' 'SHA256' '6660500842507c3f429f769c31d2d22078dcb1fa65c4689fb9ed6abfc212edf6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19410101-19411231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19410101-19411231.nc' 'SHA256' '7a88481ff4b28a29359d8442e20e479cc9d91ced22244ee0d1a64a5a7d608bb4'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19420101-19421231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19420101-19421231.nc' 'SHA256' '19a5fc6cdd02fdfbe121cae3b0e3f263aa5a577d7b6dba8ed98ac146a63db91e'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19430101-19431231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19430101-19431231.nc' 'SHA256' 'c3b1652c1e9e43afbbb9942178ab2fbdebbdbcb3b61c0d6c6d8957c768e4825f'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19440101-19441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19440101-19441231.nc' 'SHA256' '10d5cb3dca38ad0350947fffa461bf16c7fd8c8d8beab5dadb82105ce0ace80d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19450101-19451231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19450101-19451231.nc' 'SHA256' 'ebe0d9796890a389d2a5099a7b2f4d6226be8ae57653f7db1ba86095f1234eaa'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19460101-19461231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19460101-19461231.nc' 'SHA256' 'dac81900d86ae45ee470e80bb273505f39f904bf064d132d15bb2bc7ffcf8f7b'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19470101-19471231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19470101-19471231.nc' 'SHA256' '7f9fbf171bbdb353ebbe1468673866059259c63730166887d9a08d18ad76d22d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19480101-19481231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19480101-19481231.nc' 'SHA256' '349a7d19dc5639c4c5c3a9a6680afd26f99b9876c292ed0ccc19de757e220a34'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19490101-19491231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19490101-19491231.nc' 'SHA256' '1e3a2855f342ed606d4dd3831fe763975610cabb592269d8b10da5721c05b1dd'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19500101-19501231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19500101-19501231.nc' 'SHA256' 'e9071ffacfdfe2eca9357c53897badcdcfcc1a0e208a61b521624a7baf543c39'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19510101-19511231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19510101-19511231.nc' 'SHA256' '1619ec813bc99d655ab1da7fdb617cdfa86b90a40ea94dcc404663add776819d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19520101-19521231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19520101-19521231.nc' 'SHA256' '58a4beb7f343cf15cd9997bdb8ce9379a224e09a898c163db36e9ffd6efc6b2a'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19530101-19531231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19530101-19531231.nc' 'SHA256' '1f66b8000556ff814df59db2935a65d317342ffdd0a54c07653d7176916b8ff0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19540101-19541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19540101-19541231.nc' 'SHA256' 'b836afb1eec49d8e258fb62226c153f091c6d01b4ff9bcc41496f2cae0d9655f'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19550101-19551231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19550101-19551231.nc' 'SHA256' '124d22b7647404f804886378ff106c4764752cacdf797596526d3588037a52c1'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19560101-19561231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19560101-19561231.nc' 'SHA256' 'dd7abb96ee4617c54947f10682409d363a212a29fccbd694e060adeef0cd8a05'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19570101-19571231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19570101-19571231.nc' 'SHA256' '6e7ee452c7d22cbce8454b04f86d122fc08c119a565d4efd4f5c3167ab2ee8af'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19580101-19581231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19580101-19581231.nc' 'SHA256' 'bc35d4f8b5b0ffa1244b3f337e7f8e8537c020a1ca14a56d8a784383f7745ca8'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19590101-19591231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19590101-19591231.nc' 'SHA256' '9573910e7610760c7e3ad1a48535f2b64490feaac17ad77227e8d29201fa672d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19600101-19601231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19600101-19601231.nc' 'SHA256' '5e5d198b0dd3d7030a97e9ad90b417fdbc7b4c6f7c80fbafd078e576bfcf4352'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19610101-19611231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19610101-19611231.nc' 'SHA256' '2edcea75b27efd214c2aa2d64e6089b132a42d174b57a7bc20f591f6459db431'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19620101-19621231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19620101-19621231.nc' 'SHA256' '06e3cf1487aa55f10352a23bcfbf482ffa69849ded2293cbd159ac3c5db9e442'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19630101-19631231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19630101-19631231.nc' 'SHA256' '6ceb925a47379cbe2793f91e4a790245fd024158edd3a1c7e9b0a8f48ab41acc'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19640101-19641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19640101-19641231.nc' 'SHA256' '7b070c93041ae65acb45fd64d0e4d27cce90f2507314cb8ccbdd9d6c173af9ec'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19650101-19651231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19650101-19651231.nc' 'SHA256' '2328da893755e3ea5c2a55be1a0f727a0a7f2893e928fd3f147a4520e85727dc'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19660101-19661231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19660101-19661231.nc' 'SHA256' '508f899b9bbcaac70e176c1fef46b5cea86d2ed6d72ccb93e5be5fef98f8f47d'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19670101-19671231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19670101-19671231.nc' 'SHA256' '31584a70fd423d058e448af6e7987c4b75640013f63c13cfc494d63f0c6cf1e7'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19680101-19681231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19680101-19681231.nc' 'SHA256' 'ac32df73dc77f5eeb7fa459b60f272ac3d6df0b6bfc4776207a49cfa6e7832a6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19690101-19691231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19690101-19691231.nc' 'SHA256' 'd141b627eb064eaf8b31b0a7fa82182df92d1d58ea739bda83163ffdc7ae224b'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19700101-19701231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19700101-19701231.nc' 'SHA256' '1fa3329df77e5b57772c3016b3754499fdf35dd48dab44548db6d3c8861f39df'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19710101-19711231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19710101-19711231.nc' 'SHA256' '79bfac20ffced7629a9b664264852ae558d98939538463eaafe529016356e7d5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19720101-19721231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19720101-19721231.nc' 'SHA256' 'c4e0deab76b7eec1d7d4a6ced7aba057cef63657767f3493abb1c446179bd006'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19730101-19731231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19730101-19731231.nc' 'SHA256' '44fd8e7fac40eb80975224c98c8f79688bff196118e88d470bb8e8329b2a75f6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19740101-19741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19740101-19741231.nc' 'SHA256' 'ea93d3f24b567b71d80cc12d076093d45d2b49465719591673432f3bc70b1160'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19750101-19751231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19750101-19751231.nc' 'SHA256' '7e108ade9cc0fe9e4e3caaa3107f6e33b656626b6131cedeff7c4ca238bd40fa'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19760101-19761231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19760101-19761231.nc' 'SHA256' '9e5c6973337b763a9a17669cc725ee91124f2e9e26e644cd940c56ef9acb19a3'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19770101-19771231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19770101-19771231.nc' 'SHA256' '66975b73241e8274e3bd38bf85b6ce8bb5523c6fb797cba0a4fd222e25e8d4ca'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19780101-19781231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19780101-19781231.nc' 'SHA256' 'ee045047c4aba2fc20c1bfc27f2e97961651985526104c0d1ad507ac78058437'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19790101-19791231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19790101-19791231.nc' 'SHA256' '0d4e50fe6a198f70bdd1de36388c59640fec945cfeab11ab38bde9090c56e1fc'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19800101-19801231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19800101-19801231.nc' 'SHA256' 'f7f7ebde23c771bae4ddf2daa8db5c69bb6b7b8134d1d325adffe8a8d07ddb95'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19810101-19811231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19810101-19811231.nc' 'SHA256' 'ff89bb0566021cbb05d0e4f736da9f0a28dbad877761aa6f7ce46bf3bb723a3a'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19820101-19821231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19820101-19821231.nc' 'SHA256' '970ad5802e814f091a51f3c7e97b94f95595867089753195116f4b7979242c72'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19830101-19831231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19830101-19831231.nc' 'SHA256' 'c381926f73a51d5f121fa200a734ebeef82f2c1f3eabcf6190a1158c9729df56'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19840101-19841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19840101-19841231.nc' 'SHA256' '91364493c0dc78ff28bc0a9607e7ef0529abf48c4362af3a18f9638a37620ddf'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19850101-19851231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19850101-19851231.nc' 'SHA256' '5d23df30a070003e3078bcd91bf5c4c9a4cdd15b4543d747fabc93507bd7b597'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19860101-19861231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19860101-19861231.nc' 'SHA256' '38fcb560a449ded6b42fa845052712d57b675ce9aef43c7d12b60d3db3672321'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19870101-19871231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19870101-19871231.nc' 'SHA256' 'a7018a39cbf9a19da63ce684bbdf9d370310171ea143cbbcb44543d6a2636d40'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19880101-19881231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19880101-19881231.nc' 'SHA256' '447997e8efa07fea50b10c18433de0e93329414940a5ef18798764a336bb0fd3'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19890101-19891231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19890101-19891231.nc' 'SHA256' '4a8f43ad95d80d7fc6a2d60a2ddf2c2b7dd6f57cc706a08055aca8c523d3afb5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19900101-19901231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19900101-19901231.nc' 'SHA256' 'b6ac632ac32d9a792c4deac174a5e14295e67af5da6c8dafb24401049c97a503'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19910101-19911231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19910101-19911231.nc' 'SHA256' '5f73fea51272dfaea725179546e16bad54848bcb68d5381aa502c9186f280808'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19920101-19921231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19920101-19921231.nc' 'SHA256' '75ef34131a9ba78aa4cbad6cfc26b80b5174511cafe755418c83170ef76049be'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19930101-19931231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19930101-19931231.nc' 'SHA256' '80e45be53c1cd687ffb0b2c246ac215094c83feeb1ddc12f516d33e764e090a9'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19940101-19941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19940101-19941231.nc' 'SHA256' 'ade8ac7e2daed9e0da5c23b271910cfefc49cca23fa067802f444488254ec532'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19950101-19951231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19950101-19951231.nc' 'SHA256' '95ea3eab9ea8a8c5508f76e82afe08d93cc9082a44948178ba2e8c3bfc1184c6'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19960101-19961231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19960101-19961231.nc' 'SHA256' 'f0482e373ada706a37d621cefd4c18cdfcb003775c33c50e9c8a85e63d4a752e'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19970101-19971231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19970101-19971231.nc' 'SHA256' '3c7bab447c4a3067281e8949fd97203da8495dac7f1961a019e9c2f7f6a37a13'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19980101-19981231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19980101-19981231.nc' 'SHA256' '4e036e6e868db1fa82bb1d14677b224768ede1e6c6087ebd721755f49860ba50'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19990101-19991231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_19990101-19991231.nc' 'SHA256' 'd6aba03e432b4ab3f9e0ef915262b6ffc576dc74d5fe4ea0af80210a11c5ef06'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20000101-20001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20000101-20001231.nc' 'SHA256' '18515bfa42430c0cc8a3b65c3aa85c411fc7cd8b5c7efcbe3740011e52da49d5'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20010101-20011231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20010101-20011231.nc' 'SHA256' '2cfcf33ec5754bf3b21df84a688246d4e7ac8c3bd42b37e9cf1c487551cf63ed'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20020101-20021231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20020101-20021231.nc' 'SHA256' '57a7f78416f3188a0d5f1476b84ab0e7e4467c9f031ef9daeb8c99f61c14c9b0'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20030101-20031231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20030101-20031231.nc' 'SHA256' '06177e55af1d31209b39a9a1ba401f047c112517b940a351d814527ea3d5b5ff'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20040101-20041231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20040101-20041231.nc' 'SHA256' '4982f05c143da342d8e94536ad67ab5bed29a6b0789dfa645bec6b3700ffa916'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20050101-20051231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20050101-20051231.nc' 'SHA256' '870e4539b7af135ac643e8063016994dda4330692b8bf18cada3ea5e576c5069'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20060101-20061231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20060101-20061231.nc' 'SHA256' 'b9ed110df62609e9d606c159be75d4edf68c5c658970e82f56345d555c01d5e2'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20070101-20071231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20070101-20071231.nc' 'SHA256' 'ea6bb1b852b86b8eac9404404f9ee0a05f36c20f7c0c2bad9a1564942c4c5e85'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20080101-20081231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20080101-20081231.nc' 'SHA256' '461d5fcf8cb07d99b8cb5a1da3482e701685da66843ed16f6d279788ac2f68f2'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20090101-20091231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20090101-20091231.nc' 'SHA256' '950efadbcfe9df1e84d41900f27ffab9dd4e268755dbbd3bbd8e8855c9f74ab4'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20100101-20101231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20100101-20101231.nc' 'SHA256' '9f447651b26a6c05c7e85cb1e58b3b6281ce33bda53d4e401dcc3603f80fb4ab'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20110101-20111231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20110101-20111231.nc' 'SHA256' '0c01b245f5dcee4618f0b2fff4d0b595ec64c07e81e4940a07377972b0e87490'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20120101-20121231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20120101-20121231.nc' 'SHA256' '54af6700b55397b0238890d5d6bd42e3d6aa903615af3df0cea21e4faca94b9c'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20130101-20131231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20130101-20131231.nc' 'SHA256' '7ffb3bf625830eb9cdf6ebefd0d5cd0f2467bcd51720375c665ebcd7ccf016ed'
'tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20140101-20141231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r1i1000p1f2/day/tas/gn/v20210118/tas_day_MIROC-ES2L_historical_r1i1000p1f2_gn_20140101-20141231.nc' 'SHA256' '6480211295f6285e8fa9910da4d7c767a1d604f4df4243d39ac769c5c7c13541'
'tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_18500101-18991231.nc' 'http://esgf-data03.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MRI/MRI-ESM2-0/historical/r1i1000p1f1/day/tas/gn/v20201029/tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_18500101-18991231.nc' 'SHA256' 'b7b079c4794c4799e0bad1b2efb32e6c5ba4c368748ecd8686c2351e0fe6d051'
'tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_19000101-19491231.nc' 'http://esgf-data03.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MRI/MRI-ESM2-0/historical/r1i1000p1f1/day/tas/gn/v20201029/tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_19000101-19491231.nc' 'SHA256' '59569081787e8040de46076bc1da4bb5310a5c1966152ca23e3b21c56245c258'
'tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_19500101-19991231.nc' 'http://esgf-data03.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MRI/MRI-ESM2-0/historical/r1i1000p1f1/day/tas/gn/v20201029/tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_19500101-19991231.nc' 'SHA256' 'd88a4487968268c3907ae0df5b1435f5847f7fadb5b879135ce10ec86311a5ed'
'tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_20000101-20141231.nc' 'http://esgf-data03.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/CMIP/MRI/MRI-ESM2-0/historical/r1i1000p1f1/day/tas/gn/v20201029/tas_day_MRI-ESM2-0_historical_r1i1000p1f1_gn_20000101-20141231.nc' 'SHA256' 'aca3cec278c5694faa4cfa73c2aa407a186244569eea6202333f8b1d260ee542'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 169 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
